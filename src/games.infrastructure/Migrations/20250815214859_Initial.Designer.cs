// <auto-generated />
using System;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using TbdDevelop.GameTrove.Games.Infrastructure.Contexts;

#nullable disable

namespace TbdDevelop.GameTrove.Games.Infrastructure.Migrations
{
    [DbContext(typeof(GameTrackingContext))]
    [Migration("20250815214859_Initial")]
    partial class Initial
    {
        /// <inheritdoc />
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "9.0.8")
                .HasAnnotation("Relational:MaxIdentifierLength", 128);

            SqlServerModelBuilderExtensions.UseIdentityColumns(modelBuilder);

            modelBuilder.Entity("TbdDevelop.GameTrove.Games.Domain.Entities.Game", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<Guid>("Identifier")
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("PlatformId")
                        .HasColumnType("int");

                    b.Property<int?>("PublisherId")
                        .HasColumnType("int");

                    b.Property<DateTime?>("UpdatedDate")
                        .HasColumnType("datetime2");

                    b.HasKey("Id");

                    b.HasIndex("PlatformId");

                    b.HasIndex("PublisherId");

                    b.ToTable("Games", (string)null);
                });

            modelBuilder.Entity("TbdDevelop.GameTrove.Games.Domain.Entities.GameCopy", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<int>("Condition")
                        .HasColumnType("int");

                    b.Property<decimal?>("Cost")
                        .HasColumnType("decimal(18,2)");

                    b.Property<int>("GameId")
                        .HasColumnType("int");

                    b.Property<Guid>("Identifier")
                        .HasColumnType("uniqueidentifier");

                    b.Property<DateTime>("PurchaseDate")
                        .HasColumnType("datetime2");

                    b.Property<string>("Upc")
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime>("UpdatedDate")
                        .HasColumnType("datetime2");

                    b.HasKey("Id");

                    b.HasIndex("GameId");

                    b.ToTable("GameCopies", (string)null);
                });

            modelBuilder.Entity("TbdDevelop.GameTrove.Games.Domain.Entities.IgdbPlatformMapping", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<int>("IgdbPlatformId")
                        .HasColumnType("int");

                    b.Property<int>("PlatformId")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.HasAlternateKey("PlatformId");

                    b.ToTable("IgdbPlatformMappings", (string)null);
                });

            modelBuilder.Entity("TbdDevelop.GameTrove.Games.Domain.Entities.Platform", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<Guid>("Identifier")
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("Manufacturer")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.ToTable("Platforms", (string)null);
                });

            modelBuilder.Entity("TbdDevelop.GameTrove.Games.Domain.Entities.PriceChartingGameCopyAssociation", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<decimal?>("CompleteInBoxPrice")
                        .HasColumnType("decimal(18,2)");

                    b.Property<int>("GameCopyId")
                        .HasColumnType("int");

                    b.Property<DateTime>("LastUpdated")
                        .HasColumnType("datetime2");

                    b.Property<decimal?>("LoosePrice")
                        .HasColumnType("decimal(18,2)");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<decimal?>("NewPrice")
                        .HasColumnType("decimal(18,2)");

                    b.Property<int>("PriceChartingId")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.HasIndex("GameCopyId")
                        .IsUnique();

                    b.ToTable("PriceChartingGameCopyAssociations", (string)null);
                });

            modelBuilder.Entity("TbdDevelop.GameTrove.Games.Domain.Entities.Publisher", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<Guid>("Identifier")
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.ToTable("Publishers", (string)null);
                });

            modelBuilder.Entity("TbdDevelop.GameTrove.Games.Domain.Entities.UserSummary", b =>
                {
                    b.Property<int>("Copies")
                        .HasColumnType("int");

                    b.Property<int>("Games")
                        .HasColumnType("int");

                    b.Property<int>("Platforms")
                        .HasColumnType("int");

                    b.ToTable((string)null);

                    b.ToView("UserSummary", (string)null);
                });

            modelBuilder.Entity("TbdDevelop.GameTrove.Games.Domain.Entities.Game", b =>
                {
                    b.HasOne("TbdDevelop.GameTrove.Games.Domain.Entities.Platform", "Platform")
                        .WithMany()
                        .HasForeignKey("PlatformId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("TbdDevelop.GameTrove.Games.Domain.Entities.Publisher", "Publisher")
                        .WithMany()
                        .HasForeignKey("PublisherId");

                    b.Navigation("Platform");

                    b.Navigation("Publisher");
                });

            modelBuilder.Entity("TbdDevelop.GameTrove.Games.Domain.Entities.GameCopy", b =>
                {
                    b.HasOne("TbdDevelop.GameTrove.Games.Domain.Entities.Game", "Game")
                        .WithMany("Copies")
                        .HasForeignKey("GameId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Game");
                });

            modelBuilder.Entity("TbdDevelop.GameTrove.Games.Domain.Entities.IgdbPlatformMapping", b =>
                {
                    b.HasOne("TbdDevelop.GameTrove.Games.Domain.Entities.Platform", "Platform")
                        .WithOne("Mapping")
                        .HasForeignKey("TbdDevelop.GameTrove.Games.Domain.Entities.IgdbPlatformMapping", "PlatformId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Platform");
                });

            modelBuilder.Entity("TbdDevelop.GameTrove.Games.Domain.Entities.PriceChartingGameCopyAssociation", b =>
                {
                    b.HasOne("TbdDevelop.GameTrove.Games.Domain.Entities.GameCopy", "GameCopy")
                        .WithOne("PriceChartingAssociation")
                        .HasForeignKey("TbdDevelop.GameTrove.Games.Domain.Entities.PriceChartingGameCopyAssociation", "GameCopyId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("GameCopy");
                });

            modelBuilder.Entity("TbdDevelop.GameTrove.Games.Domain.Entities.Game", b =>
                {
                    b.Navigation("Copies");
                });

            modelBuilder.Entity("TbdDevelop.GameTrove.Games.Domain.Entities.GameCopy", b =>
                {
                    b.Navigation("PriceChartingAssociation");
                });

            modelBuilder.Entity("TbdDevelop.GameTrove.Games.Domain.Entities.Platform", b =>
                {
                    b.Navigation("Mapping");
                });
#pragma warning restore 612, 618
        }
    }
}
